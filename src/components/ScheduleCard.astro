---
import type { schedule } from "../layouts/Layout.astro";
import { teams } from "../layouts/Layout.astro";

type Props = {
  event: (typeof schedule)[number];
};

const { event } = Astro.props;

const type = event.summary?.split(" ")[0].replace("[", "").replace("]", "");

const team = teams.find((team) => team.name.includes(type));
---

<a
  href={event.htmlLink}
  target="_blank"
  rel="noopener noreferrer"
  class="relative overflow-hidden aspect-video w-full text-left rounded-xl group drop-shadow-2xl"
>
  <img
    src={team?.image || "/contributors.jpg"}
    alt=""
    class="object-cover object-center group-hover:scale-110 transition-transform absolute top-0 w-full h-full"
  />
  <div
    class="relative z-10 flex flex-col-reverse pb-4 pl-6 w-full h-full shadow-[inset_-20px_-20px_80px_black,inset_20px_20px_80px_black]"
  >
    <event-date
      data-date={event.start.dateTime}
      class="text-grey text-base font-cabin"
    >
    </event-date>
    <h3 class="drop-shadow-2xl text-4xl font-bebas-neue">
      {event.summary?.replace(`[${type}]`, "")}
    </h3>
    <div
      style={{ backgroundColor: team?.color || "#E93737" }}
      class="text-xs font-cabin font-semibold px-2 py-1 rounded-full w-min mb-2"
    >
      {type}
    </div>
  </div>
</a>

<script>
  class EventDate extends HTMLElement {
    constructor() {
      super();

      if (this.dataset.date) {
        const date = new Date(this.dataset.date);

        this.innerHTML = `${date.toLocaleDateString([], {
          dateStyle: "medium",
        })} -
        ${date.toLocaleTimeString([], {
          timeStyle: "short",
        })}`;
      }
    }
  }

  customElements.define("event-date", EventDate);
</script>
