---
import { Game } from "../../../scripts/notion/getGames";
import GameSection from "../../components/Games/GameSection.astro";
import RosterCard from "../../components/Games/RosterCard.astro";
import Layout, { games, rosters } from "../../layouts/Layout.astro";

export function getStaticPaths() {
  return games.map((game) => ({
    params: {
      game: game.name
        .normalize("NFD")
        .replace(/[\u0300-\u036f]/g, "")
        .toLowerCase()
        .replace(/ /g, "-"),
    },
    props: {
      game,
    },
  }));
}

type Props = {
  game: Game;
};

const { game } = Astro.props;

const roster = rosters.filter((person) => person.game === game.id);
---

<Layout title={game.name} primaryColor={game.color}>
  <div class="relative grid place-items-center h-[500px]">
    <img
      src={game.image}
      alt={`Nouns Esports' ${game.name} banner`}
      class="absolute top-0 w-full h-full object-cover object-center -z-10 //grayscale brightness-50"
    />
    <div
      class="w-full h-full grid place-items-center shadow-[inset_-60px_-60px_100px_black,inset_60px_60px_100px_black]"
    >
      <h1
        class="text-white text-8xl max-lg:text-6xl max-md:text-5xl max-[500px]:text-4xl font-luckiest-guy"
      >
        {game.name}
      </h1>
    </div>
  </div>
  <div
    class="bg-black p-16 max-lg:p-8 gap-16 max-lg:gap-8 flex flex-col border-t-4 border-t-[var(--primaryColor)] rounded-t-[4rem] max-lg:rounded-t-[2rem] -mt-16 relative z-10"
  >
    <div class="flex gap-16 max-lg:gap-8 max-lg:flex-col">
      <GameSection title="ABOUT" href={game.liquipedia}>
        {game.description}
      </GameSection>
      <GameSection title="HIGHLIGHTS">
        <iframe
          class="rounded-xl w-[30vw] max-lg:w-full aspect-video"
          src={game.video}
          title="YouTube video player"
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
          allowfullscreen></iframe>
      </GameSection>
    </div>
    {
      roster.length > 0 ? (
        <GameSection title="ROSTER">
          <div class="flex -mx-16 max-xl:-mx-8 px-16 max-xl:px-8 gap-8 max-xl:gap-4 w-[calc(100%_+_8rem)] max-xl:w-[calc(100%_+_4rem)] max-xl:overflow-x-scroll">
            {roster.map((person) => (
              <RosterCard game={game} person={person} />
            ))}
          </div>
        </GameSection>
      ) : (
        ""
      )
    }
  </div>
</Layout>
